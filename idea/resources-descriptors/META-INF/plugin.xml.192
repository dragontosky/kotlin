<idea-plugin xmlns:xi="http://www.w3.org/2001/XInclude" version="2" url="http://kotlinlang.org" allow-bundled-update="true">
  <id>org.jetbrains.kotlin</id>

  <name>Kotlin</name>
  <description><![CDATA[
The Kotlin plugin provides language support in IntelliJ IDEA and Android Studio.
<br>
<a href="http://kotlinlang.org/docs/tutorials/getting-started.html">Getting Started in IntelliJ IDEA</a><br>
<a href="http://kotlinlang.org/docs/tutorials/kotlin-android.html">Getting Started in Android Studio</a><br>
<a href="http://slack.kotlinlang.org/">Public Slack</a><br>
<a href="https://youtrack.jetbrains.com/issues/KT">Issue tracker</a><br>
]]></description>
  <version>@snapshot@</version>
  <vendor url="http://www.jetbrains.com">JetBrains</vendor>

  <idea-version since-build="192.7142.36" until-build="192.*"/>

  <change-notes><![CDATA[
    <h3>1.4-RC:</h3>
    <ul>
      <li>All source sets now include the standard library dependency by default.</li>
      <li>New IDE functionality to debug coroutines.</li>
      <li>The ability to define deep recursive functions using coroutines.</li>
      <li>Improved Kotlin/JS integrations for npm dependencies, CSS, and dukat in Gradle, the @JsExport annotation in the default compiler backend</li>
      <li>A preview for Node.js API bindings.</li>
      <li>Simplified management of CocoaPods dependencies.</li>
    </ul>
    For more details, please refer to <a href="http://blog.jetbrains.com/kotlin/2020/07/kotlin-1-4-rc-released/?utm_source=product&utm_medium=link">the blogpost</a>.
    <h3>1.4-M3</h3>
    Released: <b>July 6, 2020</b>
    <ul>
      <li>JVM libraries now come with the module-info descriptor</li>
      <li>Functional interfaces are added to the standard library</li>
      <li>New collection operations to cover real-life cases</li>
      <li>@Throws annotation in the common library</li>
      <li>Deprecation of some functions on floating-point arrays</li>
    </ul>
    For more details, please refer to <a href="https://blog.jetbrains.com/kotlin/2020/07/kotlin-1-4-m3-is-out-standard-library-changes/?utm_source=product&utm_medium=link">the blogpost</a>.
    <h3>1.4-M2</h3>
    Released: <b>June 4, 2020</b>
    <ul>
      <li>Support for sharing code in several targets thanks to the hierarchical structure in multiplatform projects.</li>
      <li>A new flexible Kotlin Project Wizard for easy creation and configuration of different types of projects.</li>
      <li>A new compiler mode for library authors called explicit API mode that helps create consistent and well-described APIs.</li>
      <li>Kotlin/Native support for using suspending functions from Swift and Objective-C.</li>
      <li>Kotlin/JS’ refined Gradle DSL, CSS support out of the box, and a common export annotation.</li>
    </ul>
    For more details, please refer to <a href="http://blog.jetbrains.com/kotlin/2020/06/kotlin-1-4-m2-released/?utm_source=product&utm_medium=link">the blogpost</a>.
    <h3>1.4-M1</h3>
    Released: <b>March 23, 2020</b>
    <ul>
      <li>A new, more powerful type inference algorithm is enabled by default.</li>
      <li>Contracts are now available for final member functions.</li>
      <li>The Kotlin/JVM compiler now generates type annotations in the bytecode for Java 8+ targets.</li>
      <li>There’s a new backend for Kotlin/JS that brings major improvements to the resulting artifacts.</li>
      <li>Evolutionary changes in the standard library: completing deprecation cycles and deprecating some additional parts.</li>
    </ul>
    For more details, please refer to <a href="https://blog.jetbrains.com/kotlin/2020/03/kotlin-1-4-m1-released/?utm_source=product&utm_medium=link">the blogpost</a>.
    ]]>
  </change-notes>

  <depends>com.intellij.modules.platform</depends>

  <depends optional="true" config-file="junit.xml">JUnit</depends>
  <depends optional="true" config-file="gradle.xml">org.jetbrains.plugins.gradle</depends>
  <depends optional="true" config-file="gradle-java.xml">org.jetbrains.plugins.gradle.java</depends>
  <depends optional="true" config-file="kotlin-gradle-testing.xml">org.jetbrains.plugins.gradle.java</depends>
  <depends optional="true" config-file="gradle-groovy.xml">org.intellij.groovy</depends>
  <depends optional="true" config-file="maven-common.xml">org.jetbrains.idea.maven</depends>
  <depends optional="true" config-file="maven.xml">org.jetbrains.idea.maven</depends>
  <depends optional="true" config-file="testng-j.xml">TestNG-J</depends>
  <depends optional="true" config-file="coverage.xml">Coverage</depends>
  <depends optional="true" config-file="i18n.xml">com.intellij.java-i18n</depends>
  <depends optional="true" config-file="decompiler.xml">org.jetbrains.java.decompiler</depends>
  <depends optional="true" config-file="git4idea.xml">Git4Idea</depends>
  <depends optional="true" config-file="stream-debugger.xml">org.jetbrains.debugger.streams</depends>

  <!-- ULTIMATE-PLUGIN-PLACEHOLDER -->

  <!-- CIDR-PLUGIN-PLACEHOLDER-START -->
  <depends>com.intellij.modules.idea</depends>
  <depends>com.intellij.modules.java</depends>
  <depends optional="true" config-file="javaScriptDebug.xml">JavaScriptDebugger</depends>
  <depends optional="true" config-file="kotlin-copyright.xml">com.intellij.copyright</depends>
  <depends optional="true" config-file="injection.xml">org.intellij.intelliLang</depends>
  <!-- CIDR-PLUGIN-PLACEHOLDER-END -->

  <xi:include href="plugin-common.xml" xpointer="xpointer(/idea-plugin/*)"/>

  <!-- CIDR-PLUGIN-EXCLUDE-START -->
  <xi:include href="jvm-common.xml" xpointer="xpointer(/idea-plugin/*)"/>
  <xi:include href="jvm.xml" xpointer="xpointer(/idea-plugin/*)"/>
  <!-- CIDR-PLUGIN-EXCLUDE-END -->

  <xi:include href="native-common.xml" xpointer="xpointer(/idea-plugin/*)"/>
  <xi:include href="native.xml" xpointer="xpointer(/idea-plugin/*)"/>

  <xi:include href="tipsAndTricks.xml" xpointer="xpointer(/idea-plugin/*)"/>

  <xi:include href="extensions/ide.xml" xpointer="xpointer(/idea-plugin/*)"/>

  <xi:include href="kotlinx-serialization.xml" xpointer="xpointer(/idea-plugin/*)"/>

  <xi:include href="scripting-support.xml" xpointer="xpointer(/idea-plugin/*)"/>

  <application-components>
    <component>
      <implementation-class>org.jetbrains.kotlin.idea.versions.KotlinUpdatePluginComponent</implementation-class>
    </component>
  </application-components>

  <project-components>
      <component>
        <implementation-class>org.jetbrains.kotlin.idea.completion.LookupCancelWatcher</implementation-class>
      </component>
      <component>
        <implementation-class>org.jetbrains.kotlin.idea.caches.KotlinPackageContentModificationListener</implementation-class>
      </component>
      <component>
        <implementation-class>org.jetbrains.kotlin.idea.configuration.KotlinMigrationProjectComponent</implementation-class>
      </component>
      <component>
        <implementation-class>org.jetbrains.kotlin.idea.highlighter.KotlinBeforeResolveHighlightingPass$Factory</implementation-class>
      </component>
      <component>
        <implementation-class>org.jetbrains.kotlin.idea.refactoring.cutPaste.MoveDeclarationsPassFactory</implementation-class>
        <skipForDefaultProject/>
      </component>
      <component>
        <implementation-class>org.jetbrains.kotlin.idea.highlighter.ScriptExternalHighlightingPass$Factory</implementation-class>
      </component>
      <component>
        <implementation-class>org.jetbrains.kotlin.idea.caches.trackers.KotlinCodeBlockModificationListener</implementation-class>
      </component>
  </project-components>

  <application-components>
    <component>
    <implementation-class>org.jetbrains.kotlin.idea.PluginStartupComponent</implementation-class>
    </component>
  </application-components>

  <extensionPoints>
    <xi:include href="extensions/compiler.xml" xpointer="xpointer(/idea-plugin/extensionPoints/*)"/>

    <extensionPoint qualifiedName="org.jetbrains.kotlin.pluginUpdateVerifier"
                    interface="org.jetbrains.kotlin.idea.update.PluginUpdateVerifier"/>
  </extensionPoints>

  <xi:include href="plugin-kotlin-extensions.xml" xpointer="xpointer(/idea-plugin/*)"/>

  <extensions defaultExtensionNs="com.intellij.jvm">
    <declarationSearcher language="kotlin" implementationClass="org.jetbrains.kotlin.idea.jvm.KotlinDeclarationSearcher"/>
  </extensions>

    <extensions defaultExtensionNs="com.intellij">
      <statistics.counterUsagesCollector groupId="kotlin.gradle.target" version="2"/>
      <statistics.counterUsagesCollector groupId="kotlin.maven.target" version="3"/>
      <statistics.counterUsagesCollector groupId="kotlin.jps.target" version="3"/>
      <statistics.counterUsagesCollector groupId="kotlin.gradle.library" version="1"/>
      <statistics.counterUsagesCollector groupId="kotlin.ide.refactoring" version="1"/>
      <statistics.counterUsagesCollector groupId="kotlin.ide.newFileTempl" version="1"/>
      <statistics.counterUsagesCollector groupId="kotlin.ide.npwizards" version="2"/>
      <statistics.counterUsagesCollector groupId="kotlin.ide.debugger" version="2"/>
      <statistics.counterUsagesCollector groupId="kotlin.ide.j2k" version="1"/>
      <statistics.counterUsagesCollector groupId="kotlin.ide.editor" version="1"/>
      <statistics.counterUsagesCollector groupId="kotlin.ide.migrationTool" version="1"/>
      <statistics.counterUsagesCollector groupId="kotlin.ide.new.wizard" version="1"/>
      <statistics.counterUsagesCollector groupId="kotlin.gradle.performance" version="1"/>
      <statistics.projectUsagesCollector implementation="org.jetbrains.kotlin.idea.IDESettingsFUSCollector"/>
      <statistics.projectUsagesCollector implementation="org.jetbrains.kotlin.idea.formatter.KotlinFormatterUsageCollector"/>
      <statistics.projectUsagesCollector implementation="org.jetbrains.kotlin.idea.statistics.ProjectConfigurationCollector"/>

      <fileTypeUsageSchemaDescriptor schema="Gradle Script" implementationClass="org.jetbrains.kotlin.idea.core.script.KotlinGradleScriptFileTypeSchemaDetector"/>
      <defaultLiveTemplatesProvider implementation="org.jetbrains.kotlin.idea.liveTemplates.KotlinLiveTemplatesProvider"/>

      <fileTypeFactory implementation="org.jetbrains.kotlin.idea.core.KotlinFileTypeFactory"/>
      <fileTypeFactory implementation="org.jetbrains.kotlin.idea.KotlinJavaScriptMetaFileTypeFactory"/>
      <fileTypeFactory implementation="org.jetbrains.kotlin.idea.KotlinBuiltInFileTypeFactory"/>
      <fileTypeFactory implementation="org.jetbrains.kotlin.idea.KotlinModuleFileFactory"/>
    </extensions>

  <extensions defaultExtensionNs="com.intellij">
    <focusModeProvider language="kotlin" implementationClass="org.jetbrains.kotlin.idea.core.KotlinFocusModeProvider" />
  </extensions>

</idea-plugin>
